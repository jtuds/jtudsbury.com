/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */

@mixin grid-setup($namespace: "") {
    /**
    * Whole
    */
    .#{$namespace}one-whole         { width:100%; }


    /**
    * Halves
    */
    .#{$namespace}one-half          { width:50%; }


    /**
    * Thirds
    */
    .#{$namespace}one-third         { width:33.333%; }
    .#{$namespace}two-thirds        { width:66.666%; }


    /**
    * Quarters
    */
    .#{$namespace}one-quarter       { width:25%; }
    .#{$namespace}two-quarters      { @extend .#{$namespace}one-half; }
    .#{$namespace}three-quarters    { width:75%; }


    /**
    * Fifths
    */
    .#{$namespace}one-fifth         { width:20%; }
    .#{$namespace}two-fifths        { width:40%; }
    .#{$namespace}three-fifths      { width:60%; }
    .#{$namespace}four-fifths       { width:80%; }


    /**
    * Sixths
    */
    .#{$namespace}one-sixth         { width:16.666%; }
    .#{$namespace}two-sixths        { @extend .#{$namespace}one-third; }
    .#{$namespace}three-sixths      { @extend .#{$namespace}one-half; }
    .#{$namespace}four-sixths       { @extend .#{$namespace}two-thirds; }
    .#{$namespace}five-sixths       { width:83.333%; }


    /**
    * Eighths
    */
    .#{$namespace}one-eighth        { width:12.5%; }
    .#{$namespace}two-eighths       { @extend .#{$namespace}one-quarter; }
    .#{$namespace}three-eighths     { width:37.5%; }
    .#{$namespace}four-eighths      { @extend .#{$namespace}one-half; }
    .#{$namespace}five-eighths      { width:62.5%; }
    .#{$namespace}six-eighths       { @extend .#{$namespace}three-quarters; }
    .#{$namespace}seven-eighths     { width:87.5%; }


    /**
    * Tenths
    */
    .#{$namespace}one-tenth         { width:10%; }
    .#{$namespace}two-tenths        { @extend .#{$namespace}one-fifth; }
    .#{$namespace}three-tenths      { width:30%; }
    .#{$namespace}four-tenths       { @extend .#{$namespace}two-fifths; }
    .#{$namespace}five-tenths       { @extend .#{$namespace}one-half; }
    .#{$namespace}six-tenths        { @extend .#{$namespace}three-fifths; }
    .#{$namespace}seven-tenths      { width:70%; }
    .#{$namespace}eight-tenths      { @extend .#{$namespace}four-fifths; }
    .#{$namespace}nine-tenths       { width:90%; }


    /**
    * Twelfths
    */
    .#{$namespace}one-twelfth       { width:8.333%; }
    .#{$namespace}two-twelfths      { @extend .#{$namespace}one-sixth; }
    .#{$namespace}three-twelfths    { @extend .#{$namespace}one-quarter; }
    .#{$namespace}four-twelfths     { @extend .#{$namespace}one-third; }
    .#{$namespace}five-twelfths     { width:41.666% }
    .#{$namespace}six-twelfths      { @extend .#{$namespace}one-half; }
    .#{$namespace}seven-twelfths    { width:58.333%; }
    .#{$namespace}eight-twelfths    { @extend .#{$namespace}two-thirds; }
    .#{$namespace}nine-twelfths     { @extend .#{$namespace}three-quarters; }
    .#{$namespace}ten-twelfths      { @extend .#{$namespace}five-sixths; }
    .#{$namespace}eleven-twelfths   { width:91.666%; }

    /**
    * Panels
    */
    .#{$namespace}panel {
		min-height:100%;
		padding-top:$spacing-unit * 4;
		padding-bottom:$spacing-unit * 4;

		@include media-query(portable) {
			padding-top:$spacing-unit * 3;
			padding-bottom:$spacing-unit * 3;
		}

		@include media-query(palm) {
			padding-top:$spacing-unit * 2;
			padding-bottom:$spacing-unit * 2;
		}
	}
    .#{$namespace}panel--large {
        min-height:100%;
        padding-top:$spacing-unit * 6;
        padding-bottom:$spacing-unit * 6;

        @include media-query(portable) {
            padding-top:$spacing-unit * 4;
            padding-bottom:$spacing-unit * 4;
        }
    }
    .#{$namespace}panel--double {
    	padding-top:$spacing-unit * 8;
		padding-bottom:$spacing-unit * 8;

		@include media-query(portable) {
			padding-top:$spacing-unit * 6;
			padding-bottom:$spacing-unit * 6;
		}
	}
	.#{$namespace}panel--half {
		padding-top:$spacing-unit * 2;
		padding-bottom:$spacing-unit * 2;

		@include media-query(portable) {
			padding-top:$spacing-unit;
			padding-bottom:$spacing-unit;
		}
	}
    .#{$namespace}panel--tight {
        padding-top:$spacing-unit;
        padding-bottom:$spacing-unit;

        @include media-query(portable) {
            padding-top:$spacing-unit / 2;
            padding-bottom:$spacing-unit / 2;
        }
    }
    .#{$namespace}panel--x-tight {
        padding-top:$spacing-unit / 2;
        padding-bottom:$spacing-unit / 2;

        @include media-query(portable) {
            padding-top:$spacing-unit / 4;
            padding-bottom:$spacing-unit / 4;
        }
    }
    .#{$namespace}panel--flat {
        margin-bottom:0;
    }
	.#{$namespace}panel--flush {
		padding-top:0;
		padding-bottom:0;
	}
	.#{$namespace}panel--flush-top {
		padding-top:0;
	}
	.#{$namespace}panel--flush-bottom {
		padding-bottom:0;
	}
}

@include grid-setup();

/**
 * Breakpoint grid setup
 */
@include media-query(palm){
    @include grid-setup("palm-");
}

@include media-query(lap){
    @include grid-setup("lap-");
}

@include media-query(lap-and-up){
    @include grid-setup("lap-and-up-");
}

@include media-query(portable){
    @include grid-setup("portable-");
}

@include media-query(desk-narrow){
    @include grid-setup("desk-narrow-");
}

@include media-query(desk-narrow-max){
    @include grid-setup("desk-narrow-max-");
}

@include media-query(desk){
    @include grid-setup("desk-");
}

@include media-query(desk){
    @include grid-setup("desk-max-");
}

@include media-query(desk-wide){
    @include grid-setup("desk-wide-");
}